/*! issue-tracker 2014-05-03 */
var app=angular.module("issueTracker",["ngRoute"]);app.config(["$routeProvider",function($routeProvider){$routeProvider.when("/login",{templateUrl:"partials/login.html",controller:"RootCtrl"}).when("/dashboard",{templateUrl:"partials/dashboard.html",controller:"DashboardCtrl"}).when("/tasks",{templateUrl:"partials/tasks.html",controller:"TasksCtrl"}).when("/bugs",{templateUrl:"partials/bugs.html",controller:"BugsCtrl"}).when("/statistics",{templateUrl:"partials/statistics.html",controller:"StatisticsCtrl"}).when("/team",{templateUrl:"partials/team.html",controller:"TeamCtrl"}).when("/settings",{templateUrl:"partials/settings.html",controller:"SettingsCtrl"}).otherwise({redirectTo:"/login",controller:"RootCtrl"})}]),app.controller("RootCtrl",["$scope","$rootScope","$location","$http",function($scope,$rootScope,$location,$http){$rootScope.username="abucin",$rootScope.createAction="",$rootScope.maxUserTasks=10,$rootScope.auth=!1,$rootScope.canFilter=!1,$rootScope.isDeleting=!1,$rootScope.displayAll=!0,$rootScope.tickets=[],$rootScope.logEntries=[],$rootScope.users=[],$rootScope.workloadData=[],$rootScope.createdTickets=[],$rootScope.inProgressTickets=[],$rootScope.testingTickets=[],$rootScope.doneTickets=[],$rootScope.updatedTask={},$rootScope.updatedBug={},$rootScope.task={code:"XX-01",title:"",description:"",type:"task"},$rootScope.bug={code:"XX-02",title:"",description:"",type:"bug"},$rootScope.loggedHoursData=[{name:"mlawrence",data:[7,8,9,8,8]},{name:"athompson",data:[7,6,8,11,8]},{name:"psmith",data:[8,8,9,8,7]}],$rootScope.ticketCompletionData=[{name:"Bug",data:[15,31,12]},{name:"Task",data:[13,16,5]}],$rootScope.scatterData=[{type:"line",name:"Regression Line",data:[[20,20],[100,100]],marker:{enabled:!1},states:{hover:{lineWidth:0}},enableMouseTracking:!1},{name:"Bugs",color:"rgba(223, 83, 83, .5)",data:[[51,51],[57,59],[56,49],[57,63],[55,53]]},{name:"Tasks",color:"rgba(119, 152, 191, .5)",data:[[74,65],[75,71],[93,80],[86,72],[87,78],[81,74],[84,86],[84,78],[75,62],[84,81]]}],angular.element(document).ready(function(){$scope.fetchUserData()}),$scope.fetchUserData=function(){$http({method:"GET",url:"/itracker/api/users"}).success(function(data){$rootScope.users=data,$rootScope.workloadData=[],$rootScope.tickets=[],$rootScope.logEntries=[];for(var i in data){$rootScope.workloadData.push([data[i].username,data[i].tickets.length]);var tickets=$rootScope.users[i].tickets,logs=$rootScope.users[i].logs;for(var j in tickets)switch(tickets[j].username=$rootScope.users[i].username,$rootScope.tickets.push(tickets[j]),tickets[j].status){case"created":$rootScope.createdTickets.push(tickets[j]);break;case"in_progress":$rootScope.inProgressTickets.push(tickets[j]);break;case"testing":$rootScope.testingTickets.push(tickets[j]);break;case"done":$rootScope.doneTickets.push(tickets[j]);break;default:$rootScope.doneTickets.push(tickets[j])}for(var j in logs)logs[j].username=$rootScope.users[i].username,$rootScope.logEntries.push(logs[j])}$rootScope.dashboardChart()}).error(function(data,status){alert(status+" : "+data)})},$scope.navigate=function(url){$location.path("/"+url)},$scope.addTicket=function(type){var data={};"task"===type?angular.copy($rootScope.task,data):"bug"===type&&angular.copy($rootScope.bug,data),$http({method:"POST",url:"/itracker/api/users/"+$rootScope.username+"/tickets",data:data}).success(function(data){$rootScope.tickets.push(data),$rootScope.createdTickets.push(data)})},$scope.updateTicket=function(type){var data={};"task"===type?angular.copy($rootScope.updatedTask,data):"bug"===type&&angular.copy($rootScope.updatedBug,data),$http({method:"PUT",url:"/itracker/api/users/"+$rootScope.username+"/tickets/"+data.key,data:data}).success(function(data){for(var i in $rootScope.tickets)if($rootScope.tickets[i].key==data.key){angular.copy(data,$rootScope.tickets[i]);break}$scope.apply()})},$scope.deleteTicket=function(key){$http({method:"DELETE",url:"/itracker/api/users/"+$rootScope.username+"/tickets/"+key}).success(function(){for(var i in $rootScope.tickets)if($rootScope.tickets[i].key==key){$rootScope.tickets.splice(i,1);break}})},$scope.togglePadding=function(){return $rootScope.auth===!0?"body-menu-padding":""},$scope.login=function(){$rootScope.auth=!0,$scope.navigate("dashboard")},$scope.logout=function(){$rootScope.auth=!1,$scope.navigate("login")},$rootScope.dashboardChart=function(){$("#panel-workload").highcharts({chart:{plotBackgroundColor:null,plotBorderWidth:null,plotShadow:!1},title:{text:""},tooltip:{pointFormat:"{series.name}: <b>{point.percentage:.1f}%</b>"},plotOptions:{pie:{allowPointSelect:!0,cursor:"pointer",dataLabels:{enabled:!0,color:"#000000",connectorColor:"#000000",format:"<b>{point.name}</b>: {point.percentage:.1f} %"}}},credits:{enabled:!1},series:[{type:"pie",name:"Assigned tickets",data:$rootScope.workloadData}]})}}]),app.controller("BugsCtrl",["$scope","$rootScope","$location",function($scope,$rootScope){$rootScope.auth=!0,$rootScope.canFilter=!0,$rootScope.createAction="Report Bug",$rootScope.deleteAction="Delete Bugs",$scope.isEditing=!1}]),app.controller("DashboardCtrl",["$scope","$rootScope","$location",function($scope,$rootScope){$rootScope.canFilter=!1,$rootScope.auth=!0,$rootScope.dashboardChart()}]),app.controller("SettingsCtrl",["$scope","$rootScope","$location",function($scope,$rootScope){$rootScope.auth=!0}]),app.controller("StatisticsCtrl",["$scope","$rootScope","$location",function($scope,$rootScope){$rootScope.auth=!0,$rootScope.canFilter=!1,$scope.chart=function(){$("#chart").highcharts({chart:{type:"line"},title:{text:"Logged Hours"},xAxis:{categories:["Mon","Tue","Wed","Thu","Fri","Sat","Sun"]},yAxis:{title:{text:"Hours"}},tooltip:{enabled:!1,formatter:function(){return"<b>"+this.series.name+"</b><br/>"+this.x+": "+this.y+"Â°C"}},plotOptions:{line:{dataLabels:{enabled:!0},enableMouseTracking:!1}},credits:{enabled:!1},series:$rootScope.loggedHoursData})},$scope.chart2=function(){$("#chart2").highcharts({chart:{type:"bar"},title:{text:"Ticket Completion by User"},xAxis:{categories:["psmith","athompson","mlawrence"],title:{text:null}},yAxis:{min:0,title:{text:"Amount",align:"high"},labels:{overflow:"justify"}},plotOptions:{bar:{dataLabels:{enabled:!0}}},legend:{layout:"vertical",align:"right",verticalAlign:"top",x:-40,y:100,floating:!0,borderWidth:1,backgroundColor:"#FFFFFF",shadow:!0},credits:{enabled:!1},series:$rootScope.ticketCompletionData})},$scope.chart3=function(){$("#chart3").highcharts({chart:{type:"scatter"},title:{text:"Effort vs. Estimation of Tickets by Type"},xAxis:{title:{enabled:!0,text:"Estimation (hrs.)"},startOnTick:!0,endOnTick:!0,showLastLabel:!0},yAxis:{title:{text:"Effort (hrs.)"}},legend:{layout:"vertical",align:"left",verticalAlign:"top",x:100,y:70,floating:!0,backgroundColor:"#FFFFFF",borderWidth:1},plotOptions:{scatter:{marker:{radius:5,states:{hover:{enabled:!0,lineColor:"rgb(100,100,100)"}}},states:{hover:{marker:{enabled:!1}}},tooltip:{headerFormat:"<b>{series.name}</b><br>",pointFormat:"{point.x} hrs. est., {point.y} hrs. eff."}}},credits:{enabled:!1},series:$rootScope.scatterData})}}]),app.controller("TasksCtrl",["$scope","$rootScope","$location",function($scope,$rootScope){$rootScope.auth=!0,$rootScope.canFilter=!0,$rootScope.createAction="Create Task",$rootScope.deleteAction="Delete Tasks",$scope.isEditing=!1}]),app.controller("TeamCtrl",["$scope","$rootScope","$location",function($scope,$rootScope){$rootScope.auth=!0,$rootScope.canFilter=!1,$rootScope.createAction="Add User"}]),app.directive("ticket",function($rootScope){function templateFunction(tElem,tAttr){var type="task";return void 0===tAttr.task&&(type="bug"),"<div class='ticket ticket-code ticket-"+type+"'>{{ticket.code}}<span class='ticket-title' data-toggle='modal' data-target='#ticket-preview-modal'>{{ticket.title}}</span><i class='fa fa-times' ng-show='isDeleting && ticket.username === username'></i></div>"}return{restrict:"E",link:function(scope,element){scope.ticket.username!==$rootScope.username&&element.css({"background-color":"#3F424B"}),element.find("i").on("click",function(){scope.deleteTicket(scope.ticket.key)}),element.on("click",function(){scope.isEditing=!0,"task"===scope.ticket.type?(null===$rootScope.updatedTask.code||scope.ticket.code!==$rootScope.updatedTask.code)&&angular.copy(scope.ticket,$rootScope.updatedTask):"bug"===scope.ticket.type&&(null===$rootScope.updatedBug.code||scope.ticket.code!==$rootScope.updatedBug.code)&&angular.copy(scope.ticket,$rootScope.updatedBug),scope.$apply()})},replace:!0,template:templateFunction}}),app.directive("secured",function($rootScope,$location){return{restrict:"A",link:function(){$rootScope.auth===!1&&$location.path("/login")}}}),app.directive("collapsibleIcon",function(){return{restrict:"A",link:function(scope,element){element.on("click",function(){element.hasClass("fa-minus")&&element.parent().parent().parent().children().hasClass("collapse")?(element.toggleClass("fa-minus",!1),element.toggleClass("fa-plus",!0)):(element.toggleClass("fa-minus",!0),element.toggleClass("fa-plus",!1))})}}}),app.directive("draggable",function(){return function(scope,element){var el=element[0];el.draggable=!0,el.addEventListener("dragstart",function(e){return e.dataTransfer.effectAllowed="move",e.dataTransfer.setData("Text",this.id),this.classList.add("drag"),!1},!1),el.addEventListener("dragend",function(){return this.classList.remove("drag"),!1},!1)}}),app.directive("droppable",function(){return{scope:{drop:"&",bin:"="},link:function(scope,element){var el=element[0];el.addEventListener("dragover",function(e){return e.dataTransfer.dropEffect="move",e.preventDefault&&e.preventDefault(),this.classList.add("over"),!1},!1),el.addEventListener("dragenter",function(){return this.classList.add("over"),!1},!1),el.addEventListener("dragleave",function(){return this.classList.remove("over"),!1},!1),el.addEventListener("drop",function(e){e.preventDefault&&e.preventDefault(),e.stopPropagation&&e.stopPropagation(),this.classList.remove("over");var binId=this.id,item=document.getElementById(e.dataTransfer.getData("Text"));return this.appendChild(item),scope.$apply(function(scope){var fn=scope.drop();"undefined"!=typeof fn&&fn(item.id,binId)}),!1},!1)}}}),app.directive("trackerMenu",function(){return{restrict:"E",templateUrl:"partials/menu.html"}}),app.directive("toggleable",function(){return{restrict:"C",link:function(scope,element){element.on("click",function(){element.parent().children().toggleClass("active",!1),element.toggleClass("active",!0)})}}}),app.directive("overhead",function($rootScope){return{restrict:"E",replace:!0,link:function(scope){scope.width=0,scope.color="success",scope.tasksLabel="",scope.user.tasks>0&&(scope.tasksLabel=scope.user.tasks),scope.user.tasks>3&&scope.user.tasks<7?scope.color="warning":scope.user.tasks>=7&&(scope.color="danger"),scope.user.tasks<=$rootScope.maxUserTasks&&(scope.width=10*scope.user.tasks)},template:"<div class='progress'><div class='progress-bar progress-bar-{{color}}' role='progressbar' aria-valuenow='{{user.tasks}}' aria-valuemin='0' aria-valuemax='10' style='width: {{width}}%;'>{{tasksLabel}}/10</div></div>"}}),app.directive("time",function(){return{restrict:"E",replace:!0,link:function(scope){scope.full=scope.user.estimatedTime+scope.user.loggedTime,scope.estimatedWidth=100*scope.user.estimatedTime/scope.full,scope.loggedWidth=100-scope.estimatedWidth,scope.estimatedValue=scope.estimatedWidth/10,scope.loggedValue=10-scope.estimatedValue},template:"<div class='progress'><div class='progress-bar progress-bar-success' role='progressbar' tooltip-placement='top' tooltip='Logged Time' aria-valuenow='{{loggedValue}}' aria-valuemin='0' aria-valuemax='10' style='width: {{loggedWidth}}%;'>{{user.loggedTime}}h</div><div class='progress-bar progress-bar-danger' role='progressbar' tooltip-placement='top' tooltip='Estimated Time' aria-valuenow='{{estimatedValue}}' aria-valuemin='0' aria-valuemax='10' style='width: {{estimatedWidth}}%;'>{{user.estimatedTime}}h</div> </div>"}}),app.filter("capitalize",function(){return function(input){return input.charAt(0).toUpperCase()+input.slice(1)}}),app.filter("momentInTime",function(){return function(date){var now=Date.now(),diff=Math.floor((now-Date.parse(date))/1e3),result="Just now";return diff>2&&60>diff?result=diff+" seconds ago":diff>=60&&120>diff?result="1 minute ago":diff>=121&&3600>diff?result=Math.floor(diff/60)+" minutes ago":diff>=3600&&7200>diff?result="1 hour ago":diff>=7200&&86400>diff?result=Math.floor(diff/3600)+" hours ago":diff>=86400&&172800>diff?result="1 day ago":diff>=172800&&(result=Math.floor(diff/86400)+"days ago"),result}});
